{"version":3,"sources":["api/rickmorty.js","components/Character.js","pages/Characters.js","components/Navigation/index.js","components/Loading/index.js","components/Location.js","pages/Locations.js","components/CharacterDetails.js","components/LocationDetails.js","App.js","serviceWorker.js","index.js"],"names":["RICKMOR_BASE_URL","CHARACTERS_API","CHARACTER_DETAILS_API","LOCATIONS_API","LOCATION_DETAILS_API","Character","character","image","name","id","history","useHistory","location","useLocation","className","onClick","push","pathname","alt","src","Characters","props","useState","characters","setCharacters","useEffect","fetch","then","res","json","results","Array","isArray","catch","err","console","log","e","map","key","Navigation","exact","to","Loading","Location","dimension","type","residents","length","Locations","locations","setLocations","CharacterDetails","charDetails","setCharDetails","useParams","split","pop","LocationDetails","locationDetails","setLocationDetails","Promise","all","resident","responses","response","data","title","Home","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.497e2402.chunk.js","sourcesContent":["export const RICKMOR_BASE_URL = 'https://rickandmortyapi.com/api/';\r\n\r\nexport const CHARACTERS_API = `${RICKMOR_BASE_URL}character`;\r\nexport const CHARACTER_DETAILS_API = `${RICKMOR_BASE_URL}character`;\r\n\r\nexport const LOCATIONS_API = `${RICKMOR_BASE_URL}location`;\r\nexport const LOCATION_DETAILS_API = `${RICKMOR_BASE_URL}location`;","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nfunction Character({ character }) {\r\n\r\n    let { image, name, id } = character;\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n\r\n    return (\r\n        <div className=\"character card black\" onClick={() => history.push(`${location.pathname}/${id}`)}>\r\n            <div>\r\n                <img alt={name} src={image}/>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <strong className=\"green-text\">{name}</strong>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character;","import React, { useEffect, useState } from 'react';\r\nimport { CHARACTERS_API } from '../api/rickmorty';\r\nimport Character from '../components/Character';\r\n\r\nfunction Characters(props) {\r\n\r\n    let [characters, setCharacters] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            fetch(CHARACTERS_API)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    if (res.results && Array.isArray(res.results)) {\r\n                        setCharacters(res.results);\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Characters</h2>\r\n            <hr />\r\n            <div className=\"row\">\r\n                {characters.map(character => {\r\n                    return (\r\n                        <div className=\"col l3 m4 s6\" key={character.id}>\r\n                            <Character character={character} pathname={props.location.pathname}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Characters;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navigation(props) {\r\n    return (\r\n        <nav className=\"black nav-wrapper\">\r\n            <ul>\r\n                <li className=\"yellow\">\r\n                <NavLink exact to=\"/\">\r\n                        Home\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"yellow\">\r\n                <NavLink to=\"/characters\">\r\n                        Characters\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"yellow\">\r\n                    <NavLink to=\"/locations\">\r\n                        Locations\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nfunction Loading(props) {\r\n    return (\r\n        <div className=\"progress\">\r\n            <div className=\"indeterminate\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nfunction Location({ location }) {\r\n\r\n    let { name, id, dimension, type, residents } = location;\r\n    let history = useHistory();\r\n    let { pathname } = useLocation();\r\n\r\n\r\n    return (\r\n        <div className=\"card black location\" onClick={() => {history.push(`${pathname}/${id}`)}}>\r\n            <div className=\"card-content\">\r\n                <h4 className=\"green-text\">{name}</h4>\r\n                <br/>\r\n                <ul className=\"collection\">\r\n                    <li className=\"collection-item\"><strong>Dimension: </strong>{dimension}</li>\r\n                    <li className=\"collection-item\"><strong>Type: </strong>{type}</li>\r\n                    <li className=\"collection-item\"><strong>Residents: </strong>{residents.length}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Location;","import React, { useState, useEffect } from 'react';\r\nimport { LOCATIONS_API } from '../api/rickmorty';\r\nimport Loading from '../components/Loading';\r\nimport Location from '../components/Location';\r\n\r\nfunction Locations(props) {\r\n\r\n    let [locations, setLocations] = useState(null);\r\n\r\n    useEffect(() => {\r\n        try{\r\n            fetch(LOCATIONS_API)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if(res.results && Array.isArray(res.results)){\r\n                        setLocations(res.results)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }, [])\r\n\r\n    if(!locations){\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Locations</h2>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                { locations.map(location => {\r\n                    return(\r\n                        <div key={location.id} className=\"col s12 m6 l4\">\r\n                            <Location location={location}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Locations;","import React, { useState, useEffect } from 'react';\r\nimport { CHARACTER_DETAILS_API } from '../api/rickmorty';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Loading from './Loading';\r\n\r\nfunction CharacterDetails(props) {\r\n\r\n    let [charDetails, setCharDetails] = useState(null);\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        try {\r\n            fetch(`${CHARACTER_DETAILS_API}/${id}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setCharDetails(res);\r\n                })\r\n                .catch(err => console.log(err))\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, [id])\r\n\r\n    if (!charDetails) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <Link to=\"/characters\">{`<Back`}</Link>\r\n            <h3>{charDetails['name']}</h3>\r\n            <hr />\r\n            <div className=\"charDetails\">\r\n                <div>\r\n                    <img alt={charDetails['name']} src={charDetails['image']} />\r\n                </div>\r\n                <div>\r\n                    <ul className=\"collection\">\r\n                        <li className=\"collection-item\"><strong>Origin: </strong>{charDetails['origin']['name']}</li>\r\n                        <li className=\"collection-item\"><strong>Location: </strong>{\r\n                            <Link to={`/locations/${charDetails['location']['url'].split('/').pop()}`}>{charDetails['location']['name']}</Link>\r\n                        }</li>\r\n                        <li className=\"collection-item\"><strong>Species: </strong>{charDetails['species']}</li>\r\n                        <li className=\"collection-item\"><strong>Status: </strong>{charDetails['status']}</li>\r\n                        <li className=\"collection-item\"><strong>Gender: </strong>{charDetails['gender']}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CharacterDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport Loading from './Loading';\r\nimport { LOCATION_DETAILS_API } from '../api/rickmorty';\r\n\r\nfunction LocationDetails(props) {\r\n\r\n    let [locationDetails, setLocationDetails] = useState(null);\r\n    let [characters, setCharacters] = useState(null);\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchResidents = (residents) => {\r\n            let newCharacters = [];\r\n            Promise.all(residents.map(resident => fetch(resident)))\r\n                .then(responses => Promise.all(responses.map(response => response.json())))\r\n                .then(data => setCharacters(data));\r\n            setCharacters(newCharacters);\r\n        }\r\n\r\n\r\n        try {\r\n            fetch(`${LOCATION_DETAILS_API}/${id}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setLocationDetails(res);\r\n                    if (res.residents) {\r\n                        fetchResidents(res.residents)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n\r\n    }, [id])\r\n\r\n    if (!locationDetails) {\r\n        return <Loading />\r\n    }\r\n\r\n    const renderResidents = () => {\r\n        if (!characters) {\r\n            return <Loading />\r\n        } else {\r\n            return characters.map(character => {\r\n                return (\r\n                    <div className=\"col l2 avatar\" key={character.id} onClick={() => history.push(`/characters/${character.id}`)}>\r\n                        <img alt={character.name} title={character.name} src={character.image} className=\"circle\"/>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <Link to=\"/locations\">{`<Back`}</Link>\r\n            <h3>{locationDetails['name']}</h3>\r\n            <hr />\r\n            <ul className=\"collection\">\r\n                <li className=\"collection-item\"><strong>Dimension: </strong>{locationDetails.dimension}</li>\r\n                <li className=\"collection-item\"><strong>Type: </strong>{locationDetails.type}</li>\r\n            </ul>\r\n            <br />\r\n            <h5>Residents - {locationDetails.residents.length}</h5>\r\n            <hr />\r\n            <div className=\"row\">\r\n                {renderResidents()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LocationDetails;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Characters from './pages/Characters';\r\nimport Navigation from './components/Navigation';\r\nimport Locations from './pages/Locations';\r\nimport './styles/main.css';\r\nimport CharacterDetails from './components/CharacterDetails';\r\nimport LocationDetails from './components/LocationDetails';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navigation />\r\n        <Switch>          \r\n          <Route path=\"/locations/:id\" component={LocationDetails} />\r\n          <Route path=\"/locations\" component={Locations} />\r\n\r\n          <Route path=\"/characters/:id\" component={CharacterDetails} />\r\n          <Route path=\"/characters\" component={Characters} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container home\">\r\n      <h1>Rick and Morty Router</h1>\r\n      <img alt=\"Rick and Morty\" src=\"https://upload.wikimedia.org/wikipedia/en/3/32/Rick_and_Morty_opening_credits.jpeg\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}